from django.shortcuts import render
from .models import User, Door, History
# for user_detail show image
import base64
# for generic.listview
from django.views import generic
# for history edit
# from .forms import HistoryForm
def cms_home(request):
    num_visits = request.session.get('num_visits', 0)
    request.session['num_visits'] = num_visits + 1
    return render(request, 'cms/cms_home.html', locals())

def add_user(request):
    if request.method == 'POST':
        user_name = request.POST.get('user_name')
        user_image = request.FILES.get('user_image')
        user = User(user_name=user_name, user_image=user_image.read())
        user.save()
        return render(request, 'cms/add_user.html', locals())
    return render(request, 'cms/add_user.html', locals())

def delete_user(request):
    ## Generated by copilot, not tested yet
    if request.method == 'POST':
        user_id = request.POST.get('user_id')
        user = User.objects.get(pk=user_id)
        user.delete()
        return render(request, 'cms/delete_user.html', locals())
    else:
        list_user = User.objects.all()
    return render(request, 'cms/delete_user.html', locals())

def user_detail(request):
    list_user = User.objects.all()
    img_list = [base64.b64encode(user.user_image).decode('utf-8') for user in list_user]
    user_img_list = zip(list_user, img_list)
    return render(request, 'cms/user_detail.html', context={'user_img_list': user_img_list})
                  
def add_door(request):
    if request.method == 'POST':
        door_position = request.POST.get('door_position')
        door = Door(position=door_position)
        door.save()
        return render(request, 'cms/add_door.html', locals())
    return render(request, 'cms/add_door.html', locals())

def door_detail(request):
    return render(request, 'cms/door_detail.html', locals())

def history(request):
    history = History.objects.all()
    history_image_list = list()
    for h in history:
        if h.image is not None:
            h.image = base64.b64encode(h.image).decode('utf-8')
            print(h.user_id.user_name)
            history_image_list.append((h, h.image))
    return render(request, 'cms/history.html', context = {'history_image_list': history_image_list})

def create_history(request):
    if request.method == 'POST':
        users = User.objects.all() # wrapped in locals()
        doors = Door.objects.all() # wrapped in locals()
        user_id = request.POST.get('user_id')
        user_id = User.objects.get(pk=user_id)
        door_id = request.POST.get('door_id')
        door_id = Door.objects.get(pk=door_id)
        image = request.FILES.get('incident_image')
        history = History(user_id = user_id, door_id = door_id, image = image.read())
        history.save()
        return render(request, 'cms/create_history.html', locals())
    else:
        users = User.objects.all() # wrapped in locals()
        doors = Door.objects.all() # wrapped in locals()
        return render(request, 'cms/create_history.html', locals())